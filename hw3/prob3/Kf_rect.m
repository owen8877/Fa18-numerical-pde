function rect = Kf_rect()
    const.lambdas = [4/9 1/9 1/36];
    const.mus = [8/3 -1/3 -1/3];
    const.nus = [2/3 1/6];
    rect.const = const;
    rect.Afunc = @Afunc;
    rect.ffunc = @ffunc;
end

function Au = Afunc(u, const, beta, h, N)
    u = [zeros(N+1, 1) u];
    Au = zeros(N);
    
    ms = const.mus(1); me = const.mus(2); mc = const.mus(3);
    ns = const.nus(1); na = const.nus(2);
    
    for x = 1:N-1
        for y = 1:N-1
            Au(y+1, x+1) = ( ...
                (u(y, x)+u(y+2, x)+u(y, x+2)+u(y+2, x+2)) * mc ...
              + (u(y+1, x)+u(y+2, x+1)+u(y+1, x+2)+u(y, x+1)) * me ...
              + u(y+1, x+1) * ms ...
            );
        end
    end
    
    for x = 1:N-1
        Au(1, x+1) = ( ...
            u(1, x+1) * ns ...
          + (u(1, x) + u(1, x+2)) * na ...
        ) * (h * beta) + ( ...
            u(1, x+1) * ms/2 ...
          + (u(1, x) + u(1, x+2) + 2*u(2, x+1)) * me /2 ...
          + (u(2, x) + u(2, x+2)) * mc ...
        );
        Au(N+1, x+1) = ( ...
            u(N+1, x+1) * ns ...
          + (u(N+1, x) + u(N+1, x+2)) * na ...
        ) * (h * beta) + ( ...
            u(N+1, x+1) * ms/2 ...
          + (u(N+1, x) + u(N+1, x+2) + 2*u(N, x+1)) * me / 2 ...
          + (u(N, x) + u(N, x+2)) * mc ...
        );
    end
    
    for y = 1:N-1
        Au(y+1, N+1) = ( ...
            u(y+1, N+1) * ns ...
          + (u(y, N+1) + u(y+2, N+1)) * na ...
        ) * (h * beta) + ( ...
            u(y+1, N+1) * ms/2 ...
          + (u(y, N+1) + u(y+2, N+1) + 2*u(y+1, N)) * me/2 ...
          + (u(y, N) + u(y+2, N)) * mc ...
        );
    end
    
    Au(1, N+1) = (u(1, N+1) * ns + (u(1, N) + u(2, N+1)) * na) * (h * beta) + u(2, N) * mc + (u(1, N) + u(2, N+1)) * me/2;
    Au(N+1, N+1) = (u(N+1, N+1) * ns + (u(N+1, N) + u(N, N+1)) * na) * (h * beta) + u(N, N) * mc + (u(N+1, N) + u(N, N+1)) * me/2;
    
    Au = Au(:, 2:end);
end

function fv = ffunc(f, u0, g_x0, g_1y, g_x1, const, h, N)
    fv = zeros(size(f));
    
    ls = const.lambdas(1); le = const.lambdas(2); lc = const.lambdas(3);
    ms = const.mus(1); me = const.mus(2); mc = const.mus(3);
    ns = const.nus(1); na = const.nus(2);
    for x = 1:N-1
        for y = 1:N-1
            fv(y+1, x+1) = ( ...
                (f(y, x)+f(y+2, x)+f(y, x+2)+f(y+2, x+2)) * lc ...
              + (f(y+1, x)+f(y+2, x+1)+f(y+1, x+2)+f(y, x+1)) * le ...
              + f(y+1, x+1) * ls ...
              ) * h^2;
        end
    end
    for y = 1:N-1
        fv(y+1, 2) = fv(y+1, 2) - (u0(y+1)*me + (u0(y)+u0(y+2))*mc);
    end
    
    for x = 1:N-1
        fv(1, x+1) = ( ...
            g_x0(x+1) * ns ...
          + (g_x0(x) + g_x0(x+2)) * na ...
        ) * h + ( ...
            f(1, x+1) * ls/2 ...
          + (f(1, x) + f(1, x+2) + 2*f(2, x+1)) * le/2 ...
          + (f(2, x) + f(2, x+2)) * lc ...
        ) * h^2;
        fv(N+1, x+1) = ( ...
            g_x1(x+1) * ns ...
          + (g_x1(x) + g_x1(x+2)) * na ...
        ) * h + ( ...
            f(N+1, x+1) * ls/2 ...
          + (f(N+1, x) + f(N+1, x+2) + 2*f(N, x+1)) * le/2 ...
          + (f(N, x) + f(N, x+2)) * lc ...
        ) * h^2;
    end
    fv(1, 2) = fv(1, 2) - (u0(1)*me + u0(2)*mc);
    fv(N+1, 2) = fv(N+1, 2) - (u0(N+1)*me + u0(N)*mc);
    for y = 1:N-1
        fv(y+1, N+1) = ( ...
            g_1y(y+1) * ns ...
          + (g_1y(y) + g_1y(y+2)) * na ...
        ) * h + ( ...
            f(y+1, N+1) * ls/2 ...
          + (f(y, N+1) + f(y+2, N+1) + 2*f(y+1, N)) * le/2 ...
          + (f(y, N) + f(y+2, N)) * lc ...
        ) * h^2;
    end
    fv(1, N+1) = ((g_x0(N+1)+g_1y(1)) * ns/2 + (g_x0(N) + g_1y(2)) * na) * h + (f(2, N) * lc + (f(1, N) + f(2, N+1)) * le/2) * h^2;
    fv(N+1, N+1) = ((g_x1(N+1)+g_1y(N+1)) * ns/2 + (g_x1(N) + g_1y(N)) * na) * h + (f(N, N) * lc + (f(N+1, N) + f(N, N+1)) * le/2) * h^2;
    
    fv = fv(:, 2:end);
end